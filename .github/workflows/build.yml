name: 'build'

on:
    push:
        branches:
            - '*'
        tags:
            - 'v*'

jobs:
    build:
        name: 'Build'
        runs-on: ubuntu-latest
        steps:
            - name: "Checkout"
              uses: "actions/checkout@v3"

            - name: "Set environment variables"
              run: |
                  echo "GITHUB_SHA_SHORT=$(echo ${GITHUB_SHA} | cut -c1-8)" >> "${GITHUB_ENV}"
                  echo "IMAGE_NAME=$(echo ghcr.io/${{ vars.CR_USER }}/${{ vars.IMAGE_NAME }})" >> "${GITHUB_ENV}"
                  echo "BUILD_DATE=$(TZ=Europe/Paris date -Iseconds)" >> "${GITHUB_ENV}"
                  echo "REFNAME=$(echo "${{ github.ref }}" | sed -e 's/.*\///')" >> "${GITHUB_ENV}"
                  echo "VERSION=$(TZ=Europe/Paris date +"%Y-%m-%d")" >> "${GITHUB_ENV}"

            - name: "Set environment variable VERSION_LABEL if tag"
              if: "contains(github.ref, 'refs/tags')"
              run: |
                  echo "VERSION_LABEL=${{ env.REFNAME }}" >> "${GITHUB_ENV}"

            - name: "Set environment variable VERSION_LABEL if simple commit"
              if: "!contains(github.ref, 'refs/tags')"
              run: |
                  echo "VERSION_LABEL=${{ env.VERSION }}" >> "${GITHUB_ENV}"

            - name: "Set environment variables if tag"
              if: "contains(github.ref, 'refs/tags')"
              run: |
                  echo "DOCKER_TAGS_CLIENT=${{ env.IMAGE_NAME }}-client:${{ env.REFNAME }},${{ env.IMAGE_NAME }}-client:latest" >> "${GITHUB_ENV}"
                  echo "DOCKER_TAGS_ADMIN=${{ env.IMAGE_NAME }}-admin:${{ env.REFNAME }},${{ env.IMAGE_NAME }}-admin:latest" >> "${GITHUB_ENV}"

            - name: "Set environment variables if simple commit"
              if: "!contains(github.ref, 'refs/tags')"
              run: |
                  echo "DOCKER_TAGS_CLIENT=${{ env.IMAGE_NAME }}-client:${{ env.GITHUB_SHA_SHORT}},${{ env.IMAGE_NAME }}-client:${{ env.VERSION }}-git,${{ env.IMAGE_NAME }}-client:${{ env.VERSION }}-${{ env.GITHUB_SHA_SHORT }},${{ env.IMAGE_NAME }}-client:${{ env.REFNAME }}-${{ env.GITHUB_SHA_SHORT }},${{ env.IMAGE_NAME }}-client:${{ env.REFNAME }}" >> "${GITHUB_ENV}"
                  echo "DOCKER_TAGS_ADMIN=${{ env.IMAGE_NAME }}-admin:${{ env.GITHUB_SHA_SHORT}},${{ env.IMAGE_NAME }}-admin:${{ env.VERSION }}-git,${{ env.IMAGE_NAME }}-admin:${{ env.VERSION }}-${{ env.GITHUB_SHA_SHORT }},${{ env.IMAGE_NAME }}-admin:${{ env.REFNAME }}-${{ env.GITHUB_SHA_SHORT }},${{ env.IMAGE_NAME }}-admin:${{ env.REFNAME }}" >> "${GITHUB_ENV}"

            - name: "Set up Docker Buildx"
              uses: "docker/setup-buildx-action@v2"

            - name: "Login to github container registry"
              uses: "docker/login-action@v2.1.0"
              with:
                  registry: ghcr.io
                  username: ${{ vars.CR_USER }}
                  password: ${{ secrets.CR_PAT }}

            - name: "Build and push"
              run:
                docker build . -t shurl-baseos --target shurl-baseos
                docker build . -t shurl-baseimage --target shurl-baseimage
                docker build . -t "${{ env.DOCKER_TAGS_ADMIN }}" --build-arg APPTYPE=admin --build-arg POINT=${{ env.GITHUB_SHA_SHORT }} --build-arg VCS_REF=${{ env.GITHUB_SHA_SHORT }} --build-arg BUILD_DATE=${{ env.BUILD_DATE }} --build-arg VERSION=${{ env.VERSION_LABEL }}
                docker build . -t "${{ env.DOCKER_TAGS_CLIENT }}" --build-arg APPTYPE=client --build-arg POINT=${{ env.GITHUB_SHA_SHORT }} --build-arg VCS_REF=${{ env.GITHUB_SHA_SHORT }} --build-arg BUILD_DATE=${{ env.BUILD_DATE }} --build-arg VERSION=${{ env.VERSION_LABEL }}
                docker push "${{ env.DOCKER_TAGS_ADMIN }}"
                docker push "${{ env.DOCKER_TAGS_CLIENT }}"
